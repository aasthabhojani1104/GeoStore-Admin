@model Country_Store.Models.PagedResult<Country_Store.Models.StateModel>


@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-2 text-center"
         id="tempMessage"
         style="background-color: #d1e7dd; color: #0f5132; border: 1px solid #badbcc;">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-4">
    <div class="card shadow border-0">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="text-primary mb-0">🏙️ State List</h3>
            </div>

            <!-- 🔍 Search box -->
            <div class="input-group mb-3">
                <input type="text" id="stateSearch" class="form-control" placeholder="🔍 Search states..." value="@ViewBag.Search" />
             
            </div>

            <!-- 📋 Table -->
            <div class="table-responsive">
                <table class="table table-bordered table-hover text-center align-middle shadow-sm">
                    <thead class="table-primary">
                        <tr>
                            <th>#</th>
                            <th>State Name</th>
                            <th>Capital</th>
                            <th>Language</th>
                            <th>Country</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Items.Any())
                        {
                            int i = (Model.CurrentPage - 1) * Model.PageSize + 1;
                            foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@item.StateName</td>
                                    <td>@item.Capital</td>
                                    <td>@item.Language</td>
                                    <td>@item.CountryName</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary me-1" onclick="reloadStateForm(@item.StateId)">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <a asp-controller="Admin" asp-action="DeleteState" asp-route-id="@item.StateId"
                                           class="btn btn-sm btn-outline-danger"
                                           onclick="return confirm('Are you sure you want to delete this state?');">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-muted">No states found.</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="text-end text-muted mb-2">
                    Showing page @Model.CurrentPage of @Model.TotalPages | Total states: <strong>@Model.TotalItems</strong>
                </div>
            </div>

            <!-- 🔽 Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <button class="btn btn-outline-secondary btn-sm @(Model.CurrentPage == 1 ? "disabled" : "")"
                            onclick="loadStatePage(@(Model.CurrentPage - 1))">
                        ⬅️ Previous
                    </button>

                    <nav>
                        <ul class="pagination pagination-sm mb-0">
                            @for (int p = 1; p <= Model.TotalPages; p++)
                            {
                                <li class="page-item @(p == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="javascript:void(0);" onclick="loadStatePage(@p)">
                                        @p
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>

                    <button class="btn btn-outline-secondary btn-sm @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")"
                            onclick="loadStatePage(@(Model.CurrentPage + 1))">
                        Next ➡️
                    </button>
                </div>
            }

        </div>
    </div>
</div>




@section Scripts {
    <script>
        setTimeout(() => {
            const message = document.getElementById("tempMessage");
            if (message) message.style.display = "none";
        }, 3000);

       
    </script>
}
